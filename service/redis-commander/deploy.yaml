---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  annotations:
    # Tell Kubernetes to apply the AppArmor profile "runtime/default".
    # Note that this is ignored if the Kubernetes node is not running version 1.4 or greater.
    # and fails if AppArmor enabled but profile not found (may happens on borked k8s installs only)
    # set to "unconfined" to disable AppArmor
    container.apparmor.security.beta.kubernetes.io/redis-commander: runtime/default
  labels:
    tl.service.name: redis-commander
    tl.service.type: tools
spec:
  replicas: 1
  selector:
    matchLabels:
        tl.service.name: redis-commander
  template:
    metadata:
      labels:
        tl.service.name: redis-commander
        tl.service.type: tools
    spec:
      containers:
        - name: redis-commander
          image: ghcr.io/joeferner/redis-commander:0.8.1
          imagePullPolicy: Always
          env:
            - name: K8S_SIGTERM
              value: "1"
          ports:
            - name: redis-commander
              containerPort: 8081
          livenessProbe:
            httpGet:
              path: /favicon.png
              port: 8081
            initialDelaySeconds: 10
            timeoutSeconds: 5
          # adapt to your needs base on data stored inside redis (number of keys and size of biggest keys)
          # or comment out for less secure installation
          resources:
            limits:
              cpu: "500m"
              memory: "512M"
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL